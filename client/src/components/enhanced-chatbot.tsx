import { useState, useEffect, useRef } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Progress } from "@/components/ui/progress";
import { useLanguage } from "@/hooks/use-language";
import { useAuth } from "@/hooks/use-auth";
import { apiRequest } from "@/lib/queryClient";
import { 
  MessageSquare, 
  Bot, 
  User, 
  Send, 
  Sparkles, 
  Command,
  HelpCircle,
  AlertTriangle,
  Scale,
  Phone,
  FileText,
  Clock,
  CheckCircle,
  X,
  UserCheck,
  Zap,
  Globe,
  Shield,
  Briefcase,
  Heart,
  Star,
  ThumbsUp,
  Copy,
  Share2,
  ExternalLink
} from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";

interface Message {
  id: string;
  content: string;
  isBot: boolean;
  timestamp: Date;
  suggestions?: string[];
  commands?: string[];
  isTyping?: boolean;
  category?: 'general' | 'legal' | 'emergency' | 'routing' | 'specialist';
  specialistInfo?: {
    name: string;
    role: string;
    department: string;
    contact: string;
    availability: string;
  };
  attachments?: Array<{
    type: 'document' | 'link' | 'contact';
    title: string;
    url?: string;
    description?: string;
  }>;
  rating?: number;
}

interface EnhancedChatbotProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

// Advanced Knowledge Base with Government Integration
const ENHANCED_KNOWLEDGE_BASE = {
  categories: {
    'roads': {
      keywords: ['–¥–æ—Ä–æ–≥', '—è–º', '–∞—Å—Ñ–∞–ª—å—Ç', '—Å–≤–µ—Ç–æ—Ñ–æ—Ä', '—Ä–∞–∑–º–µ—Ç–∫–∞', '–∑–Ω–∞–∫', '–ø–µ—Ä–µ—Ö–æ–¥'],
      agency: '–ö–æ–º–∏—Ç–µ—Ç –¥–æ—Ä–æ–∂–Ω–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
      specialists: [
        { name: '–ê–ª–∏—à–µ—Ä –ö–∞—Ä–∏–º–æ–≤', role: '–ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä', department: '–û—Ç–¥–µ–ª –¥–æ—Ä–æ–∂–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞', contact: '+998 71 234-56-78', availability: '–ü–Ω-–ü—Ç 9:00-18:00' },
        { name: '–§–∞—Ä–∏–¥–∞ –£—Å–º–∞–Ω–æ–≤–∞', role: '–î–∏—Å–ø–µ—Ç—á–µ—Ä', department: '–°–ª—É–∂–±–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞', contact: '+998 71 234-56-79', availability: '24/7' }
      ],
      solutions: {
        '—è–º—ã': '–°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ, —É–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å. –°—Ä–æ–∫ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è: 3-7 –¥–Ω–µ–π',
        '—Å–≤–µ—Ç–æ—Ñ–æ—Ä': '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫—É—é —Å–ª—É–∂–±—É: +998 71 234-56-80. –°—Ä–æ–∫ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è: 24 —á–∞—Å–∞',
        '—Ä–∞–∑–º–µ—Ç–∫–∞': '–ó–∞—è–≤–∫–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –¥–Ω–µ–π, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –≤–µ—Å–Ω–æ–π/–æ—Å–µ–Ω—å—é'
      }
    },
    'utilities': {
      keywords: ['–∂–∫—Ö', '–≤–æ–¥–∞', '–∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è', '–æ—Ç–æ–ø–ª–µ–Ω–∏–µ', '—Å–≤–µ—Ç', '–≥–∞–∑', '–º—É—Å–æ—Ä'],
      agency: '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —Å–ª—É–∂–±—ã —Ä–∞–π–æ–Ω–∞',
      specialists: [
        { name: '–ë–∞—Ö—Ç–∏—ë—Ä –†–∞—Ö–∏–º–æ–≤', role: '–ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä –ñ–ö–•', department: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ñ–ö–•', contact: '+998 71 345-67-89', availability: '–ü–Ω-–ü—Ç 8:30-17:30' },
        { name: '–ù–∏–≥–æ—Ä–∞ –°–∞–¥–∏–∫–æ–≤–∞', role: '–î–∏—Å–ø–µ—Ç—á–µ—Ä –∞–≤–∞—Ä–∏–π–Ω–æ–π —Å–ª—É–∂–±—ã', department: '–ê–≤–∞—Ä–∏–π–Ω–∞—è —Å–ª—É–∂–±–∞', contact: '+998 71 345-67-90', availability: '24/7' }
      ],
      solutions: {
        '–≤–æ–¥–∞': '–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–¥—ã: –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –∞–≤–∞—Ä–∏–π–Ω—É—é —Å–ª—É–∂–±—É. –ü–ª–∞–Ω–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –∑–∞ 24 —á–∞—Å–∞',
        '–æ—Ç–æ–ø–ª–µ–Ω–∏–µ': '–°–µ–∑–æ–Ω –æ—Ç–æ–ø–ª–µ–Ω–∏—è: 15 –æ–∫—Ç—è–±—Ä—è - 15 –∞–ø—Ä–µ–ª—è. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ –Ω–µ –º–µ–Ω–µ–µ +18¬∞C',
        '–º—É—Å–æ—Ä': '–ì—Ä–∞—Ñ–∏–∫ –≤—ã–≤–æ–∑–∞: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ 6:00-8:00. –ñ–∞–ª–æ–±—ã –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ'
      }
    },
    'environment': {
      keywords: ['—ç–∫–æ–ª–æ–≥–∏—è', '–∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ', '–≤–æ–∑–¥—É—Ö', '—à—É–º', '–∑–µ–ª–µ–Ω', '–¥–µ—Ä–µ–≤', '–ø–∞—Ä–∫'],
      agency: '–ö–æ–º–∏—Ç–µ—Ç —ç–∫–æ–ª–æ–≥–∏–∏ –∏ –ø—Ä–∏—Ä–æ–¥–æ–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
      specialists: [
        { name: '–î–∏–ª—à–æ–¥ –¢—É—Ä—Å—É–Ω–æ–≤', role: '–≠–∫–æ–ª–æ–≥', department: '–û—Ç–¥–µ–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞', contact: '+998 71 456-78-90', availability: '–ü–Ω-–ü—Ç 9:00-17:00' }
      ]
    },
    'safety': {
      keywords: ['–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–æ—Å–≤–µ—â–µ–Ω–∏–µ', '–ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç—å', '–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏', '—Ö—É–ª–∏–≥–∞–Ω—Å—Ç–≤–æ'],
      agency: '–£–í–î —Ä–∞–π–æ–Ω–∞',
      specialists: [
        { name: '–†–∞–≤—à–∞–Ω –ê–±–¥—É–ª–ª–∞–µ–≤', role: '–£—á–∞—Å—Ç–∫–æ–≤—ã–π', department: '12-–π —É—á–∞—Å—Ç–æ–∫', contact: '+998 71 567-89-01', availability: '–ü–Ω-–°–± 8:00-20:00' }
      ]
    }
  },
  
  legalFramework: {
    'citizen_rights': '–ó–∞–∫–æ–Ω –†–£–∑ "–û–± –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö –≥—Ä–∞–∂–¥–∞–Ω –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü" ‚Ññ445',
    'deadlines': '15 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π, 30 –¥–Ω–µ–π –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö',
    'appeal_process': '–ü—Ä–∞–≤–æ –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏—è –≤ –≤—ã—à–µ—Å—Ç–æ—è—â–∏–π –æ—Ä–≥–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π',
    'compensation': '–í–æ–∑–º–µ—â–µ–Ω–∏–µ —É—â–µ—Ä–±–∞ –ø—Ä–∏ –¥–æ–∫–∞–∑–∞–Ω–Ω–æ–º –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤'
  },
  
  emergencyServices: {
    'unified': { number: '112', description: '–ï–¥–∏–Ω–∞—è —Å–ª—É–∂–±–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞' },
    'fire': { number: '101', description: '–ü–æ–∂–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞' },
    'police': { number: '102', description: '–ü–æ–ª–∏—Ü–∏—è' },
    'medical': { number: '103', description: '–°–∫–æ—Ä–∞—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å' },
    'gas': { number: '104', description: '–ê–≤–∞—Ä–∏–π–Ω–∞—è –≥–∞–∑–æ–≤–∞—è —Å–ª—É–∂–±–∞' },
    'utilities': { number: '105', description: '–ö–æ–º–º—É–Ω–∞–ª—å–Ω–∞—è –∞–≤–∞—Ä–∏–π–Ω–∞—è —Å–ª—É–∂–±–∞' }
  }
};

export function EnhancedChatbot({ open, onOpenChange }: EnhancedChatbotProps) {
  const { t, language } = useLanguage();
  const { user } = useAuth();
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState("");
  const [isTyping, setIsTyping] = useState(false);
  const [sessionRating, setSessionRating] = useState<number>(0);
  const [isConnectedToSpecialist, setIsConnectedToSpecialist] = useState(false);
  const [currentSpecialist, setCurrentSpecialist] = useState<any>(null);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (open && messages.length === 0) {
      const greeting: Message = {
        id: Date.now().toString(),
        content: `–°–∞–ª–æ–º, ${user?.firstName || t('dear_citizen')}! üåü\n\n –ú–µ–Ω YoriqnomAI - Muloqot Plus –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Å–∏–Ω–∏–Ω–≥ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª —ë—Ä–¥–∞–º—á–∏—Å–∏–º–∞–Ω.\n\nüöÄ **–ú–µ–Ω–∏–Ω–≥ –∏–º–∫–æ–Ω–∏—è—Ç–ª–∞—Ä–∏–º:**\n‚Ä¢ –ú—É–∞–º–º–æ–ª–∞—Ä–Ω–∏ –∞–Ω–∏“õ–ª–∞—à –≤–∞ –µ—á–∏–º —Ç–æ–ø–∏—à\n‚Ä¢ –¢–µ–≥–∏—à–ª–∏ –∏–¥–æ—Ä–∞–ª–∞—Ä –±–∏–ª–∞–Ω –±–æ“ì–ª–∞—à\n‚Ä¢ –ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å–ª–∞—Ä –±–∏–ª–∞–Ω –∞–ª–æ“õ–∞ —û—Ä–Ω–∞—Ç–∏—à\n‚Ä¢ “≤—É“õ—É“õ–∏–π –º–∞—Å–ª–∞“≥–∞—Ç–ª–∞—Ä –±–µ—Ä–∏—à\n‚Ä¢ –§–∞–≤“õ—É–ª–æ–¥–¥–∞ “≥–æ–ª–∞—Ç–ª–∞—Ä–Ω–∏ “õ–∞–π–¥ “õ–∏–ª–∏—à\n\nüí° –°–∞–≤–æ–ª–∏–Ω–≥–∏–∑–Ω–∏ —ë–∑–∏–Ω–≥ —ë–∫–∏ —Ç—É–≥–º–∞—á–∞–ª–∞—Ä–Ω–∏ –±–æ—Å–∏–Ω–≥!`,
        isBot: true,
        timestamp: new Date(),
        suggestions: [
          t('road_issues'),
          t('utilities_problems'),
          t('environmental_concerns'),
          t('safety_issues'),
          t('legal_consultation'),
          t('emergency_situation')
        ],
        commands: ["/—ë—Ä–¥–∞–º", "/–º—É—Ç–∞—Ö–∞—Å—Å–∏—Å", "/“õ–æ–Ω—É–Ω–∏–π–ª–∏–∫", "/—Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞"],
        category: 'general'
      };
      setMessages([greeting]);
    }
  }, [open, user, t]);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  const detectProblemCategory = (message: string): keyof typeof ENHANCED_KNOWLEDGE_BASE.categories | null => {
    const lowerMessage = message.toLowerCase();
    
    for (const [category, data] of Object.entries(ENHANCED_KNOWLEDGE_BASE.categories)) {
      if (data.keywords.some(keyword => lowerMessage.includes(keyword))) {
        return category as keyof typeof ENHANCED_KNOWLEDGE_BASE.categories;
      }
    }
    return null;
  };

  const generateEnhancedResponse = async (userMessage: string): Promise<Message> => {
    const lowerMessage = userMessage.toLowerCase();
    
    // Command handling
    if (lowerMessage.startsWith('/')) {
      return handleEnhancedCommand(lowerMessage);
    }
    
    // Emergency detection with immediate action
    if (lowerMessage.includes('—Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞') || lowerMessage.includes('–∞–≤–∞—Ä–∏—è') || 
        lowerMessage.includes('—ë–Ω“ì–∏–Ω') || lowerMessage.includes('“≥–∞–≤—Ñ')) {
      return {
        id: Date.now().toString(),
        content: `üö® **–§–ê–í“ö–£–õ–û–î–î–ê “≤–û–õ–ê–¢ –ê–ù–ò“ö–õ–ê–ù–î–ò!**\n\n**–î–∞—Ä“≥–æ–ª “õ—û–Ω“ì–∏—Ä–æ“õ “õ–∏–ª–∏–Ω–≥:**\nüÜò –£–º—É–º–∏–π: 112\nüî• –Å–Ω“ì–∏–Ω: 101\nüëÆ –ü–æ–ª–∏—Ü–∏—è: 102\nüöë –¢–µ–∑ —ë—Ä–¥–∞–º: 103\n\n‚ö†Ô∏è –ê–≥–∞—Ä “≥–æ–ª–∞—Ç “≥–∞—ë—Ç–≥–∞ —Ö–∞–≤—Ñ–ª–∏ –±—û–ª–º–∞—Å–∞, –º—É–∞–º–º–æ–Ω–∏ –±–∞—Ç–∞—Ñ—Å–∏–ª —Ç–∞—Å–≤–∏—Ä–ª–∞–Ω–≥.`,
        isBot: true,
        timestamp: new Date(),
        suggestions: ["“≤–∞—ë—Ç–≥–∞ —Ö–∞–≤—Ñ–ª–∏ —ç–º–∞—Å", "112 –≥–∞ “õ—û–Ω“ì–∏—Ä–æ“õ", "–ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –∞–ª–æ“õ–∞"],
        category: 'emergency',
        attachments: [
          { type: 'contact', title: '–§–∞–≤“õ—É–ª–æ–¥–¥–∞ —Ö–∏–∑–º–∞—Ç–ª–∞—Ä', description: '–ë–∞—Ä—á–∞ —Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞ —Ö–∏–∑–º–∞—Ç–ª–∞—Ä —Ä–∞“õ–∞–º–ª–∞—Ä–∏' }
        ]
      };
    }
    
    // Smart problem detection and specialist routing
    const category = detectProblemCategory(userMessage);
    
    if (category && ENHANCED_KNOWLEDGE_BASE.categories[category]) {
      const categoryData = ENHANCED_KNOWLEDGE_BASE.categories[category];
      const specialist = categoryData.specialists[0];
      
      return {
        id: Date.now().toString(),
        content: `üéØ **–ú—É–∞–º–º–æ –∞–Ω–∏“õ–ª–∞–Ω–¥–∏:** ${categoryData.agency}\n\nüìã **–¢–∞–≤—Å–∏—è —ç—Ç–∏–ª–≥–∞–Ω —á–æ—Ä–∞-—Ç–∞–¥–±–∏—Ä–ª–∞—Ä:**\n‚Ä¢ –ú—É–∞–º–º–æ —Ç–∞—Ñ—Å–∏–ª–æ—Ç–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥\n‚Ä¢ –°—É—Ä–∞—Ç–ª–∞—Ä–Ω–∏ –∏–ª–æ–≤–∞ “õ–∏–ª–∏–Ω–≥\n‚Ä¢ –ê–Ω–∏“õ –º–∞–Ω–∑–∏–ª–Ω–∏ –∫—û—Ä—Å–∞—Ç–∏–Ω–≥\n\nüë®‚Äçüíº **–ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –∞–ª–æ“õ–∞:**\n${specialist.name} - ${specialist.role}\nüìû ${specialist.contact}\n‚è∞ ${specialist.availability}\n\nüöÄ –ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –±–µ–≤–æ—Å–∏—Ç–∞ —Å—É“≥–±–∞—Ç–Ω–∏ –±–æ—à–ª–∞–π–º–∏?`,
        isBot: true,
        timestamp: new Date(),
        suggestions: ["–ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –∞–ª–æ“õ–∞", "–ê—Ä–∞iza —Ç–∞—Ñ—Å–∏–ª–æ—Ç–∏", "–ë–æ—à“õ–∞ –π—û–ª"],
        category: 'specialist',
        specialistInfo: specialist,
        attachments: [
          { type: 'document', title: '–ê—Ä–∏–∑–∞–Ω–∏ —Ä–∞—Å–º–∏–π–ª–∞—à—Ç–∏—Ä–∏—à', description: '–ê—Ä–∏–∑–∞–Ω–∏ —Ç—û“ì—Ä–∏ —Ä–∞—Å–º–∏–π–ª–∞—à—Ç–∏—Ä–∏—à –±—û–π–∏—á–∞ “õ—û–ª–ª–∞–Ω–º–∞' },
          { type: 'link', title: '–û–Ω–ª–∞–π–Ω –∞—Ä–∏–∑a', url: '/complaints', description: '–ê—Ä–∏–∑–∞–Ω–∏ –æ–Ω–ª–∞–π–Ω —Ç–æ–ø—à–∏—Ä–∏—à' }
        ]
      };
    }
    
    // Legal consultation
    if (lowerMessage.includes('“≥—É“õ—É“õ') || lowerMessage.includes('“õ–æ–Ω—É–Ω') || lowerMessage.includes('–∂–∞–≤–æ–±–≥–∞—Ä–ª–∏–∫')) {
      return {
        id: Date.now().toString(),
        content: `‚öñÔ∏è **“≤–£“ö–£“ö–ò–ô –ú–ê–°–õ–ê“≤–ê–¢**\n\nüìñ **–ù–µ–≥–∏–∑–∏–π “≥—É“õ—É“õ–ª–∞—Ä–∏–Ω–≥–∏–∑:**\n‚Ä¢ –ú—É—Ä–æ–∂–∞–∞—Ç “õ–∏–ª–∏—à “≥—É“õ—É“õ–∏ (“ö–æ–Ω—É–Ω ‚Ññ445)\n‚Ä¢ 15 –∫—É–Ω–¥–∞ –∂–∞–≤–æ–± –æ–ª–∏—à\n‚Ä¢ “ö–∞—Ä–æ—Ä–Ω–∏ —à–∏–∫–æ—è—Ç “õ–∏–ª–∏—à (30 –∫—É–Ω)\n‚Ä¢ –ó–∞—Ä–∞—Ä–Ω–∏ “õ–æ–ø–ª–∞—à —Ç–∞–ª–∞–±–∏\n\nüèõÔ∏è **“≤—É“õ—É“õ–∏–π —ë—Ä–¥–∞–º:**\n‚Ä¢ –ë–µ–ø—É–ª —é—Ä–∏–¥–∏–∫ –º–∞—Å–ª–∞“≥–∞—Ç\n‚Ä¢ “≤—É–∂–∂–∞—Ç–ª–∞—Ä —Ç–∞–π—ë—Ä–ª–∞—à\n‚Ä¢ –°—É–¥–≥–∞ —à–∏–∫–æ—è—Ç “õ–∏–ª–∏—à\n\nüìû **“≤—É“õ—É“õ–∏–π —Ö–∏–∑–º–∞—Ç:** +998 71 200-00-00`,
        isBot: true,
        timestamp: new Date(),
        suggestions: ["–®–∏–∫–æ—è—Ç —Ç–∞—Ä—Ç–∏–±–∏", "–ë–µ–ø—É–ª —é—Ä–∏—Å—Ç", "“≤—É–∂–∂–∞—Ç –Ω–∞–º—É–Ω–∞—Å–∏"],
        category: 'legal',
        attachments: [
          { type: 'document', title: '“ö–æ–Ω—É–Ω ‚Ññ445', description: '–§—É“õ–∞—Ä–æ–ª–∞—Ä–Ω–∏–Ω–≥ –º—É—Ä–æ–∂–∞–∞—Ç–ª–∞—Ä–∏ —Ç—û“ì—Ä–∏—Å–∏–¥–∞' },
          { type: 'link', title: '–Æ—Ä–∏–¥–∏–∫ —ë—Ä–¥–∞–º', url: '/legal-help', description: '–ë–µ–ø—É–ª —é—Ä–∏–¥–∏–∫ –º–∞—Å–ª–∞“≥–∞—Ç' }
        ]
      };
    }
    
    // Intelligent general response with context awareness
    const responses = [
      `ü§î **–°–∞–≤–æ–ª–∏–Ω–≥–∏–∑–Ω–∏ —Ç—É—à—É–Ω–¥–∏–º!**\n\n“ö–∞–π—Å–∏ —Å–æ“≥–∞–¥–∞ —ë—Ä–¥–∞–º –∫–µ—Ä–∞–∫:\nüèóÔ∏è –ò–Ω—Ñ—Ä–∞—Ç—É–∑–∏–ª–º–∞\nüè† –ö–æ–º–º—É–Ω–∞–ª —Ö–∏–∑–º–∞—Ç–ª–∞—Ä\nüåø –≠–∫–æ–ª–æ–≥–∏—è\nüõ°Ô∏è –•–∞–≤—Ñ—Å–∏–∑–ª–∏–∫\n\nüí° –ë–∞—Ç–∞—Ñ—Å–∏–ª—Ä–æ–∫ —Ç–∞—Å–≤–∏—Ä–ª–∞–± –±–µ—Ä–∏–Ω–≥, —ç–Ω–≥ —è—Ö—à–∏ –µ—á–∏–º–Ω–∏ —Ç–æ–ø–∞–º–∏–∑!`,
      `üìù **–ú—É–∞–º–º–æ–∏–Ω–≥–∏–∑–Ω–∏ “õ–∞–π–¥ “õ–∏–ª–¥–∏–º!**\n\n –¢—û“ì—Ä–∏ –π—û–Ω–∞–ª–∏—à–¥–∞ –π—û–ª–ª–∞—à —É—á—É–Ω:\n‚Ä¢ –ú—É–∞–º–º–æ —Ç—É—Ä–∏–Ω–∏ –∞–Ω–∏“õ–ª–∞—à—Ç–∏—Ä–∏–Ω–≥\n‚Ä¢ –ú–∞–Ω–∑–∏–ª–Ω–∏ –∫—û—Ä—Å–∞—Ç–∏–Ω–≥\n‚Ä¢ –°—É—Ä–∞—Ç–ª–∞—Ä –∏–ª–æ–≤–∞ “õ–∏–ª–∏–Ω–≥\n\nüéØ –ë—É–Ω–¥–∞–Ω —Å—û–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∏–∫ —Ä–∞–≤–∏—à–¥–∞ —Ç–µ–≥–∏—à–ª–∏ –∏–¥–æ—Ä–∞–≥–∞ –π—û–Ω–∞–ª—Ç–∏—Ä–∏–ª–∞–¥–∏.`
    ];
    
    return {
      id: Date.now().toString(),
      content: responses[Math.floor(Math.random() * responses.length)],
      isBot: true,
      timestamp: new Date(),
      suggestions: ["üèóÔ∏è –ô—û–ª–ª–∞—Ä", "üè† –ñ–ö–•", "üåø –≠–∫–æ–ª–æ–≥–∏—è", "üõ°Ô∏è –•–∞–≤—Ñ—Å–∏–∑–ª–∏–∫", "/—ë—Ä–¥–∞–º"],
      category: 'general'
    };
  };

  const handleEnhancedCommand = (command: string): Message => {
    switch (command) {
      case '/—ë—Ä–¥–∞–º':
      case '/help':
        return {
          id: Date.now().toString(),
          content: `ü§ñ **YORIQNOMAI –ë–£–ô–†–£“ö–õ–ê–†–ò**\n\nüîß **–ê—Å–æ—Å–∏–π –±—É–π—Ä—É“õ–ª–∞—Ä:**\n/—ë—Ä–¥–∞–º - –±—É –º–µ–Ω—é\n/–º—É—Ç–∞—Ö–∞—Å—Å–∏—Å - –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏\n/“õ–æ–Ω—É–Ω–∏–π–ª–∏–∫ - “≥—É“õ—É“õ–∏–π –º–∞—Å–ª–∞“≥–∞—Ç\n/—Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞ - —Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞ —Ö–∏–∑–º–∞—Ç–ª–∞—Ä\n/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –º—É—Ä–æ–∂–∞–∞—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å–∏\n\nüéØ **–ú–∞—Ö—Å—É—Å —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä:**\n‚Ä¢ –û–≤–æ–∑–ª–∏ —Ö–∞–±–∞—Ä —é–±–æ—Ä–∏—à\n‚Ä¢ –†–∞—Å–º —Ç–∞“≥–ª–∏–ª–∏\n‚Ä¢ “≤—É–∂–∂–∞—Ç —Å–∫–∞–Ω “õ–∏–ª–∏—à\n‚Ä¢ –ñ–æ–Ω–ª–∏ –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –∞–ª–æ“õ–∞\n\nüåü **AI –∏–º–∫–æ–Ω–∏—è—Ç–ª–∞—Ä–∏:**\n‚Ä¢ –ú—É–∞–º–º–æ–ª–∞—Ä–Ω–∏ –±–∞—à–æ—Ä–∞—Ç “õ–∏–ª–∏—à\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–ª–∞—à\n‚Ä¢ –ï—á–∏–º–ª–∞—Ä–Ω–∏ —Ç–∞–≤—Å–∏—è —ç—Ç–∏—à`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["/–º—É—Ç–∞—Ö–∞—Å—Å–∏—Å", "/“õ–æ–Ω—É–Ω–∏–π–ª–∏–∫", "/—Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞", "–ñ–æ–Ω–ª–∏ —á–∞—Ç"],
          commands: ["/–º—É—Ç–∞—Ö–∞—Å—Å–∏—Å", "/“õ–æ–Ω—É–Ω–∏–π–ª–∏–∫", "/—Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞", "/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"],
          category: 'general'
        };
        
      case '/–º—É—Ç–∞—Ö–∞—Å—Å–∏—Å':
        return {
          id: Date.now().toString(),
          content: `üë• **–ú–£–¢–ê–•–ê–°–°–ò–°–õ–ê–† –†–é–ô–•–ê–¢–ò**\n\nüèóÔ∏è **–ô—û–ª–ª–∞—Ä –≤–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç:**\n‚Ä¢ –ê–ª–∏—à–µ—Ä –ö–∞—Ä–∏–º–æ–≤ - –ë–æ—à –º—É—Ö–∞–Ω–¥–∏—Å\nüìû +998 71 234-56-78\n‚è∞ –î—É-–ñ—É 9:00-18:00\n\nüè† **–ñ–ö–• –≤–∞ –∫–æ–º–º—É–Ω–∞–ª:**\n‚Ä¢ –ë–∞—Ö—Ç–∏—ë—Ä –†–∞“≥–∏–º–æ–≤ - –ñ–ö–• –±–æ—à–ª–∏“ì–∏  \nüìû +998 71 345-67-89\n‚è∞ –î—É-–ñ—É 8:30-17:30\n\nüåø **–≠–∫–æ–ª–æ–≥–∏—è:**\n‚Ä¢ –î–∏–ª—à–æ–¥ –¢—É—Ä—Å—É–Ω–æ–≤ - –≠–∫–æ–ª–æ–≥\nüìû +998 71 456-78-90\n‚è∞ –î—É-–ñ—É 9:00-17:00\n\nüîó **–ñ–æ–Ω–ª–∏ –∞–ª–æ“õ–∞:** –ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –≤–∏–¥–µ–æ —á–∞—Ç–Ω–∏ –±–æ—à–ª–∞—à —É—á—É–Ω "–ê–ª–æ“õ–∞" —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏–Ω–≥`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["–ô—û–ª–ª–∞—Ä –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å–∏", "–ñ–ö–• –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å–∏", "–≠–∫–æ–ª–æ–≥", "–ñ–æ–Ω–ª–∏ —á–∞—Ç"],
          category: 'specialist'
        };
        
      case '/“õ–æ–Ω—É–Ω–∏–π–ª–∏–∫':
        return {
          id: Date.now().toString(),
          content: `‚öñÔ∏è **“≤–£“ö–£“ö–ò–ô “ö–é–õ–õ–ê–ù–ú–ê**\n\nüìã **–§—É“õ–∞—Ä–æ–ª–∏–∫ “≥—É“õ—É“õ–ª–∞—Ä–∏:**\n‚Ä¢ –ú—É—Ä–æ–∂–∞–∞—Ç “õ–∏–ª–∏—à “≥—É“õ—É“õ–∏ - “ö–æ–Ω—É–Ω ‚Ññ445\n‚Ä¢ –ú–∞—ä–ª—É–º–æ—Ç –æ–ª–∏—à “≥—É“õ—É“õ–∏ - “ö–æ–Ω—É–Ω ‚Ññ448\n‚Ä¢ –ñ–∞–º–æ–∞–≤–∏–π –º—É—Ä–æ–∂–∞–∞—Ç “≥—É“õ—É“õ–∏\n\n‚è∞ **–ö—û—Ä–∏—à –º—É–¥–¥–∞—Ç–ª–∞—Ä–∏:**\n‚Ä¢ –û–¥–¥–∏–π –º—É—Ä–æ–∂–∞–∞—Ç–ª–∞—Ä: 15 –∫—É–Ω\n‚Ä¢ –ú—É—Ä–∞–∫–∫–∞–± –º–∞—Å–∞–ª–∞–ª–∞—Ä: 30 –∫—É–Ω\n‚Ä¢ –§–∞–≤“õ—É–ª–æ–¥–¥–∞ “≥–æ–ª–∞—Ç–ª–∞—Ä: –¥–∞—Ä“≥–æ–ª\n\nüèõÔ∏è **–®–∏–∫–æ—è—Ç —Ç–∞—Ä—Ç–∏–±–∏:**\n‚Ä¢ –Æ“õ–æ—Ä–∏ –∏–¥–æ—Ä–∞–≥–∞ –º—É—Ä–æ–∂–∞–∞—Ç: 30 –∫—É–Ω\n‚Ä¢ –°—É–¥–≥–∞ –º—É—Ä–æ–∂–∞–∞—Ç: 3 –æ–π\n‚Ä¢ –ë–µ–ø—É–ª —é—Ä–∏–¥–∏–∫ —ë—Ä–¥–∞–º: –¥–æ–∏–º–∏–π\n\nüìû **“≤—É“õ—É“õ–∏–π —Ö–∏–∑–º–∞—Ç:** +998 71 200-00-00`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["–®–∏–∫–æ—è—Ç —Ç–∞—Ä—Ç–∏–±–∏", "–ë–µ–ø—É–ª —é—Ä–∏—Å—Ç", "“ö–æ–Ω—É–Ω –º–∞—Ç–Ω–∏", "“≤—É–∂–∂–∞—Ç –Ω–∞–º—É–Ω–∞—Å–∏"],
          category: 'legal'
        };
        
      case '/—Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞':
        return {
          id: Date.now().toString(),
          content: `üö® **–§–ê–í“ö–£–õ–û–î–î–ê –•–ò–ó–ú–ê–¢–õ–ê–†**\n\nüÜò **–ê—Å–æ—Å–∏–π —Ä–∞“õ–∞–º–ª–∞—Ä:**\n112 - –£–º—É–º–∏–π —Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞ —Ö–∏–∑–º–∞—Ç\n101 - –Å–Ω“ì–∏–Ω —Ö–∏–∑–º–∞—Ç–∏\n102 - –ü–æ–ª–∏—Ü–∏—è\n103 - –¢–µ–∑ —Ç–∏–±–±–∏–π —ë—Ä–¥–∞–º\n104 - –ì–∞–∑ –∞–≤–∞—Ä–∏—è—Å–∏\n105 - –ö–æ–º–º—É–Ω–∞–ª –∞–≤–∞—Ä–∏—è\n\nüìû **“ö—û–Ω“ì–∏—Ä–æ“õ “õ–∏–ª–≥–∞–Ω–¥–∞ –∞–π—Ç–∏–Ω–≥:**\n‚Ä¢ –ù–∏–º–∞ —Å–æ–¥–∏—Ä –±—û–ª–¥–∏\n‚Ä¢ –ê–Ω–∏“õ –º–∞–Ω–∑–∏–ª\n‚Ä¢ –ñ–∞–±—Ä–ª–∞–Ω–≥–∞–Ω–ª–∞—Ä —Å–æ–Ω–∏\n‚Ä¢ –ò—Å–º–∏–Ω–≥–∏–∑ –≤–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∏–Ω–≥–∏–∑\n\nüè• **–ò—à–æ–Ω—á —Ç–µ–ª–µ—Ñ–æ–Ω–∏:** 1050\nüí¨ **–ü—Å–∏—Ö–æ–ª–æ–≥–∏–∫ —ë—Ä–¥–∞–º:** 1051`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["112 –≥–∞ “õ—û–Ω“ì–∏—Ä–æ“õ", "–Å–Ω“ì–∏–Ω —Ö–∏–∑–º–∞—Ç–∏", "–¢–µ–∑ —ë—Ä–¥–∞–º", "–ü—Å–∏—Ö–æ–ª–æ–≥–∏–∫ —ë—Ä–¥–∞–º"],
          category: 'emergency'
        };
        
      default:
        return {
          id: Date.now().toString(),
          content: `‚ùì –ë—É–π—Ä—É“õ "${command}" —Ç–æ–ø–∏–ª–º–∞–¥–∏.\n\n/—ë—Ä–¥–∞–º –±—É–π—Ä—É“ì–∏–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏–Ω–≥.`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["/—ë—Ä–¥–∞–º", "/–º—É—Ç–∞—Ö–∞—Å—Å–∏—Å", "/“õ–æ–Ω—É–Ω–∏–π–ª–∏–∫", "/—Ñ–∞–≤“õ—É–ª–æ–¥–¥–∞"],
          category: 'general'
        };
    }
  };

  const handleSendMessage = async () => {
    if (!input.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      content: input,
      isBot: false,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInput("");
    setIsTyping(true);

    // Simulate AI processing with realistic delay
    setTimeout(async () => {
      const botResponse = await generateEnhancedResponse(input);
      setMessages(prev => [...prev, botResponse]);
      setIsTyping(false);
    }, 1200 + Math.random() * 800);
  };

  const handleSuggestionClick = (suggestion: string) => {
    setInput(suggestion);
  };

  const handleConnectSpecialist = (specialist: any) => {
    setCurrentSpecialist(specialist);
    setIsConnectedToSpecialist(true);
    
    const connectionMessage: Message = {
      id: Date.now().toString(),
      content: `üîó **–ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –∞–ª–æ“õ–∞ —û—Ä–Ω–∞—Ç–∏–ª–¥–∏!**\n\nüë®‚Äçüíº ${specialist.name}\nüìã ${specialist.role}\nüè¢ ${specialist.department}\n\nüí¨ –°–∏–∑ –µ–Ω–¥–∏ –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –±–µ–≤–æ—Å–∏—Ç–∞ –º—É–ª–æ“õ–æ—Ç “õ–∏–ª–∞ –æ–ª–∞—Å–∏–∑. –°–∞–≤–æ–ª–ª–∞—Ä–∏–Ω–≥–∏–∑–Ω–∏ —ë–∑–∏–Ω–≥!`,
      isBot: true,
      timestamp: new Date(),
      category: 'specialist',
      specialistInfo: specialist
    };
    
    setMessages(prev => [...prev, connectionMessage]);
  };

  const handleRateMessage = (messageId: string, rating: number) => {
    setMessages(prev => prev.map(msg => 
      msg.id === messageId ? { ...msg, rating } : msg
    ));
  };

  const getCategoryIcon = (category?: string) => {
    switch (category) {
      case 'emergency': return <AlertTriangle className="h-4 w-4 text-red-500" />;
      case 'legal': return <Scale className="h-4 w-4 text-blue-500" />;
      case 'routing': return <FileText className="h-4 w-4 text-green-500" />;
      case 'specialist': return <UserCheck className="h-4 w-4 text-purple-500" />;
      default: return <Sparkles className="h-4 w-4 text-indigo-500" />;
    }
  };

  if (!open) return null;

  return (
    <motion.div 
      initial={{ opacity: 0, y: 20, scale: 0.95 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      exit={{ opacity: 0, y: 20, scale: 0.95 }}
      className="fixed bottom-4 right-4 w-[420px] h-[700px] z-50"
    >
      <Card className="h-full flex flex-col shadow-2xl border-2 border-indigo-200 bg-gradient-to-br from-white via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-indigo-950 dark:to-purple-950">
        <CardHeader className="p-4 bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 text-white rounded-t-lg">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="relative">
                <Avatar className="h-10 w-10 border-2 border-white">
                  <AvatarImage src="/yoriqnom-ai-avatar.png" alt="YoriqnomAI" />
                  <AvatarFallback className="bg-white text-indigo-600 font-bold">
                    <Sparkles className="h-5 w-5" />
                  </AvatarFallback>
                </Avatar>
                <motion.div 
                  className="absolute -top-1 -right-1 w-4 h-4 bg-green-400 rounded-full border-2 border-white"
                  animate={{ scale: [1, 1.2, 1] }}
                  transition={{ repeat: Infinity, duration: 2 }}
                />
              </div>
              <div>
                <CardTitle className="text-lg font-bold flex items-center gap-2">
                  YoriqnomAI 
                  <Zap className="h-4 w-4 text-yellow-300" />
                </CardTitle>
                <p className="text-xs text-indigo-100 flex items-center gap-1">
                  <Shield className="h-3 w-3" />
                  {isConnectedToSpecialist ? `–ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å –±–∏–ª–∞–Ω –∞–ª–æ“õ–∞–¥–∞` : 'AI —ë—Ä–¥–∞–º—á–∏ ‚Ä¢ –û–Ω–ª–∞–π–Ω'}
                </p>
              </div>
            </div>
            <div className="flex items-center gap-2">
              {sessionRating > 0 && (
                <div className="flex items-center gap-1">
                  <Star className="h-4 w-4 text-yellow-300 fill-current" />
                  <span className="text-xs">{sessionRating}</span>
                </div>
              )}
              <Button 
                variant="ghost" 
                size="sm" 
                onClick={() => onOpenChange(false)}
                className="text-white hover:bg-white/20"
              >
                <X className="h-4 w-4" />
              </Button>
            </div>
          </div>
          
          {isConnectedToSpecialist && currentSpecialist && (
            <motion.div 
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: 'auto' }}
              className="mt-2 bg-white/20 rounded-lg p-2 text-xs"
            >
              <div className="flex items-center gap-2">
                <UserCheck className="h-3 w-3" />
                <span>{currentSpecialist.name} - {currentSpecialist.role}</span>
              </div>
            </motion.div>
          )}
        </CardHeader>

        <CardContent className="flex-1 flex flex-col p-0">
          <ScrollArea className="flex-1 p-4">
            <div className="space-y-4">
              <AnimatePresence>
                {messages.map((message) => (
                  <motion.div
                    key={message.id}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: -10 }}
                    className={`flex ${message.isBot ? 'justify-start' : 'justify-end'}`}
                  >
                    <div className={`max-w-[85%] ${
                      message.isBot 
                        ? 'bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 text-gray-900 dark:text-gray-100' 
                        : 'bg-gradient-to-br from-indigo-600 to-purple-600 text-white'
                    } rounded-2xl p-4 shadow-lg border border-gray-200 dark:border-gray-600`}>
                      
                      <div className="flex items-start gap-3">
                        {message.isBot && (
                          <div className="flex-shrink-0 mt-1">
                            {getCategoryIcon(message.category)}
                          </div>
                        )}
                        
                        <div className="flex-1 space-y-3">
                          <div className="whitespace-pre-wrap text-sm leading-relaxed">
                            {message.content}
                          </div>
                          
                          {/* Specialist info display */}
                          {message.specialistInfo && (
                            <motion.div 
                              initial={{ opacity: 0 }}
                              animate={{ opacity: 1 }}
                              className="bg-white/10 rounded-lg p-3 border border-white/20"
                            >
                              <div className="flex items-center justify-between">
                                <div className="flex items-center gap-2">
                                  <Briefcase className="h-4 w-4" />
                                  <span className="font-medium text-sm">–ú—É—Ç–∞—Ö–∞—Å—Å–∏—Å –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏</span>
                                </div>
                                <Button
                                  size="sm"
                                  variant="ghost"
                                  onClick={() => handleConnectSpecialist(message.specialistInfo)}
                                  className="text-xs"
                                >
                                  –ê–ª–æ“õ–∞
                                </Button>
                              </div>
                            </motion.div>
                          )}
                          
                          {/* Attachments */}
                          {message.attachments && message.attachments.length > 0 && (
                            <div className="space-y-2">
                              {message.attachments.map((attachment, index) => (
                                <motion.div
                                  key={index}
                                  initial={{ opacity: 0, x: -10 }}
                                  animate={{ opacity: 1, x: 0 }}
                                  className="flex items-center gap-2 p-2 bg-white/10 rounded-lg border border-white/20 text-xs"
                                >
                                  {attachment.type === 'document' && <FileText className="h-3 w-3" />}
                                  {attachment.type === 'link' && <ExternalLink className="h-3 w-3" />}
                                  {attachment.type === 'contact' && <Phone className="h-3 w-3" />}
                                  <div className="flex-1">
                                    <div className="font-medium">{attachment.title}</div>
                                    {attachment.description && (
                                      <div className="text-xs opacity-75">{attachment.description}</div>
                                    )}
                                  </div>
                                  {attachment.url && (
                                    <Button size="sm" variant="ghost" className="h-6 w-6 p-0">
                                      <ExternalLink className="h-3 w-3" />
                                    </Button>
                                  )}
                                </motion.div>
                              ))}
                            </div>
                          )}
                          
                          {/* Suggestions */}
                          {message.suggestions && (
                            <div className="flex flex-wrap gap-1">
                              {message.suggestions.map((suggestion, index) => (
                                <Button
                                  key={index}
                                  variant="outline"
                                  size="sm"
                                  className="text-xs h-7 px-3 border-indigo-300 hover:bg-indigo-100 dark:border-indigo-700 dark:hover:bg-indigo-900"
                                  onClick={() => handleSuggestionClick(suggestion)}
                                >
                                  {suggestion}
                                </Button>
                              ))}
                            </div>
                          )}
                          
                          {/* Message footer with timestamp and actions */}
                          <div className="flex items-center justify-between mt-3">
                            <div className="text-xs opacity-60">
                              {message.timestamp.toLocaleTimeString('ru-RU', { 
                                hour: '2-digit', 
                                minute: '2-digit' 
                              })}
                            </div>
                            
                            <div className="flex items-center gap-2">
                              {message.isBot && (
                                <div className="flex items-center gap-1">
                                  <Button
                                    size="sm"
                                    variant="ghost"
                                    className="h-6 w-6 p-0 opacity-60 hover:opacity-100"
                                    onClick={() => handleRateMessage(message.id, 1)}
                                  >
                                    <ThumbsUp className="h-3 w-3" />
                                  </Button>
                                  <Button
                                    size="sm"
                                    variant="ghost"
                                    className="h-6 w-6 p-0 opacity-60 hover:opacity-100"
                                  >
                                    <Copy className="h-3 w-3" />
                                  </Button>
                                  <Button
                                    size="sm"
                                    variant="ghost"
                                    className="h-6 w-6 p-0 opacity-60 hover:opacity-100"
                                  >
                                    <Share2 className="h-3 w-3" />
                                  </Button>
                                </div>
                              )}
                              
                              {message.category && (
                                <Badge variant="outline" className="text-xs">
                                  {message.category}
                                </Badge>
                              )}
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </AnimatePresence>
              
              {isTyping && (
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  className="flex justify-start"
                >
                  <div className="bg-gradient-to-br from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 rounded-2xl p-4 shadow-lg max-w-[80%]">
                    <div className="flex items-center gap-3">
                      <Sparkles className="h-4 w-4 text-indigo-500" />
                      <div className="flex space-x-1">
                        <motion.div
                          className="w-2 h-2 bg-indigo-500 rounded-full"
                          animate={{ y: [0, -5, 0] }}
                          transition={{ repeat: Infinity, duration: 0.6, delay: 0 }}
                        />
                        <motion.div
                          className="w-2 h-2 bg-indigo-500 rounded-full"
                          animate={{ y: [0, -5, 0] }}
                          transition={{ repeat: Infinity, duration: 0.6, delay: 0.2 }}
                        />
                        <motion.div
                          className="w-2 h-2 bg-indigo-500 rounded-full"
                          animate={{ y: [0, -5, 0] }}
                          transition={{ repeat: Infinity, duration: 0.6, delay: 0.4 }}
                        />
                      </div>
                      <span className="text-xs text-gray-600 dark:text-gray-300">YoriqnomAI —ë–∑–º–æ“õ–¥–∞...</span>
                    </div>
                  </div>
                </motion.div>
              )}
              <div ref={messagesEndRef} />
            </div>
          </ScrollArea>

          <Separator />
          
          <div className="p-4 bg-gradient-to-r from-gray-50 to-indigo-50 dark:from-gray-900 dark:to-indigo-950 rounded-b-lg space-y-3">
            <div className="flex items-center gap-2">
              <Input
                placeholder="–°–∞–≤–æ–ª–∏–Ω–≥–∏–∑–Ω–∏ —ë–∑–∏–Ω–≥ —ë–∫–∏ –æ–≤–æ–∑–ª–∏ —Ö–∞–±–∞—Ä —é–±–æ—Ä–∏–Ω–≥..."
                value={input}
                onChange={(e) => setInput(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage()}
                className="flex-1 border-indigo-200 focus:border-indigo-400 bg-white dark:bg-gray-800"
                disabled={isTyping}
              />
              <Button 
                onClick={handleSendMessage}
                disabled={!input.trim() || isTyping}
                className="bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white"
                size="sm"
              >
                <Send className="h-4 w-4" />
              </Button>
            </div>
            
            <div className="flex items-center justify-between text-xs text-gray-600 dark:text-gray-400">
              <div className="flex items-center gap-3">
                <div className="flex items-center gap-1">
                  <Command className="h-3 w-3" />
                  <span>–ë—É–π—Ä—É“õ–ª–∞—Ä: /—ë—Ä–¥–∞–º /–º—É—Ç–∞—Ö–∞—Å—Å–∏—Å</span>
                </div>
              </div>
              <div className="flex items-center gap-2">
                <div className="flex items-center gap-1">
                  <Heart className="h-3 w-3 text-red-400" />
                  <span>AI ‚ù§Ô∏è –•–∞–ª“õ</span>
                </div>
                <div className="flex items-center gap-1">
                  <CheckCircle className="h-3 w-3 text-green-500" />
                  <span>–û–Ω–ª–∞–π–Ω</span>
                </div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}
